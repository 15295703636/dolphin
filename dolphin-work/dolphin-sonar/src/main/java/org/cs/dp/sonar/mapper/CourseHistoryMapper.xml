<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cs.dp.sonar.mapper.CourseHistoryMapper">
    <resultMap id="BaseResultMap" type="org.cs.dp.sonar.domain.entity.CourseHistoryEntity">
        <id column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="type" column="type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="state" column="state" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="teacher_name" column="teacher_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isRecord" column="isRecord" javaType="java.lang.String" jdbcType="CHAR"/>
        <result property="isLive" column="isLive" javaType="java.lang.String" jdbcType="CHAR"/>
        <result property="start_time" column="start_time" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="end_time" column="end_time" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createrId" column="createrId" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="provenance" column="provenance" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="local_classroomId" column="local_classroomId" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="remote_classroomIds" column="remote_classroomIds" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="org_id" column="org_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="media_id" column="media_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, type, state, teacher_name, isRecord, isLive, start_time, end_time, createTime, 
    createrId, provenance, local_classroomId, remote_classroomIds, org_id, media_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from course_history
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insertSelectCurrent" parameterType="java.lang.Integer">
    INSERT INTO course_history (name, type, state, teacher_name, isRecord, isLive,
    start_time, end_time, createTime,createrId, provenance, local_classroomId,
     remote_classroomIds, org_id )
            SELECT
            course_name,
            course_type,
            course_state,
            teacher_name,
            isRecord,
            isLive,
            start_time,
            end_time,
            createTime,
            createrId,
            provenance,
            local_classroomId,
            remote_classroomIds,
            org_id
         FROM course ua where id = #{id}

  </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.cs.dp.sonar.domain.entity.CourseHistoryEntity">
    insert into course_history (id, name, type, 
      state, teacher_name, isRecord, 
      isLive, start_time, end_time, 
      createTime, createrId, provenance, 
      local_classroomId, remote_classroomIds, 
      org_id, media_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{state,jdbcType=VARCHAR}, #{teacher_name,jdbcType=VARCHAR}, #{isRecord,jdbcType=CHAR}, 
      #{isLive,jdbcType=CHAR}, #{start_time,jdbcType=VARCHAR}, #{end_time,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createrId,jdbcType=INTEGER}, #{provenance,jdbcType=VARCHAR}, 
      #{local_classroomId,jdbcType=INTEGER}, #{remote_classroomIds,jdbcType=VARCHAR}, 
      #{org_id,jdbcType=INTEGER}, #{media_id,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="org.cs.dp.sonar.domain.entity.CourseHistoryEntity">
        insert into course_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="teacher_name != null">
                teacher_name,
            </if>
            <if test="isRecord != null">
                isRecord,
            </if>
            <if test="isLive != null">
                isLive,
            </if>
            <if test="start_time != null">
                start_time,
            </if>
            <if test="end_time != null">
                end_time,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="createrId != null">
                createrId,
            </if>
            <if test="provenance != null">
                provenance,
            </if>
            <if test="local_classroomId != null">
                local_classroomId,
            </if>
            <if test="remote_classroomIds != null">
                remote_classroomIds,
            </if>
            <if test="org_id != null">
                org_id,
            </if>
            <if test="media_id != null">
                media_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="teacher_name != null">
                #{teacher_name,jdbcType=VARCHAR},
            </if>
            <if test="isRecord != null">
                #{isRecord,jdbcType=CHAR},
            </if>
            <if test="isLive != null">
                #{isLive,jdbcType=CHAR},
            </if>
            <if test="start_time != null">
                #{start_time,jdbcType=VARCHAR},
            </if>
            <if test="end_time != null">
                #{end_time,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="createrId != null">
                #{createrId,jdbcType=INTEGER},
            </if>
            <if test="provenance != null">
                #{provenance,jdbcType=VARCHAR},
            </if>
            <if test="local_classroomId != null">
                #{local_classroomId,jdbcType=INTEGER},
            </if>
            <if test="remote_classroomIds != null">
                #{remote_classroomIds,jdbcType=VARCHAR},
            </if>
            <if test="org_id != null">
                #{org_id,jdbcType=INTEGER},
            </if>
            <if test="media_id != null">
                #{media_id,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.cs.dp.sonar.domain.entity.CourseHistoryEntity">
        update course_history
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="teacher_name != null">
                teacher_name = #{teacher_name,jdbcType=VARCHAR},
            </if>
            <if test="isRecord != null">
                isRecord = #{isRecord,jdbcType=CHAR},
            </if>
            <if test="isLive != null">
                isLive = #{isLive,jdbcType=CHAR},
            </if>
            <if test="start_time != null">
                start_time = #{start_time,jdbcType=VARCHAR},
            </if>
            <if test="end_time != null">
                end_time = #{end_time,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="createrId != null">
                createrId = #{createrId,jdbcType=INTEGER},
            </if>
            <if test="provenance != null">
                provenance = #{provenance,jdbcType=VARCHAR},
            </if>
            <if test="local_classroomId != null">
                local_classroomId = #{local_classroomId,jdbcType=INTEGER},
            </if>
            <if test="remote_classroomIds != null">
                remote_classroomIds = #{remote_classroomIds,jdbcType=VARCHAR},
            </if>
            <if test="org_id != null">
                org_id = #{org_id,jdbcType=INTEGER},
            </if>
            <if test="media_id != null">
                media_id = #{media_id,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.cs.dp.sonar.domain.entity.CourseHistoryEntity">
    update course_history
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      teacher_name = #{teacher_name,jdbcType=VARCHAR},
      isRecord = #{isRecord,jdbcType=CHAR},
      isLive = #{isLive,jdbcType=CHAR},
      start_time = #{start_time,jdbcType=VARCHAR},
      end_time = #{end_time,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR},
      createrId = #{createrId,jdbcType=INTEGER},
      provenance = #{provenance,jdbcType=VARCHAR},
      local_classroomId = #{local_classroomId,jdbcType=INTEGER},
      remote_classroomIds = #{remote_classroomIds,jdbcType=VARCHAR},
      org_id = #{org_id,jdbcType=INTEGER},
      media_id = #{media_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
