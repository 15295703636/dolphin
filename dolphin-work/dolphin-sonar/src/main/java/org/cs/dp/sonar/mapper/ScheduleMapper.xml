<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cs.dp.sonar.mapper.ScheduleMapper">
    <resultMap id="BaseResultMap" type="org.cs.dp.sonar.domain.entity.ScheduleEntity">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="date" property="date" jdbcType="VARCHAR"/>
        <result column="duration" property="duration" jdbcType="VARCHAR"/>
        <result column="user_number" property="user_number" jdbcType="INTEGER"/>
        <result column="user_ids" property="user_ids" jdbcType="VARCHAR"/>
        <result column="device_id" property="device_id" jdbcType="INTEGER"/>
        <result column="device_ids" property="device_ids" jdbcType="VARCHAR"/>
        <result column="device_number" property="device_number" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="isLive" property="isLive" jdbcType="CHAR"/>
        <result column="isRecord" property="isRecord" jdbcType="CHAR"/>
        <result column="resolving_power" property="resolving_power" jdbcType="VARCHAR"/>
        <result column="bandwidth" property="bandwidth" jdbcType="VARCHAR"/>
        <result column="org_id" property="org_id" jdbcType="INTEGER"/>
        <result column="create_time" property="create_time" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="update_time" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="create_user_id" jdbcType="INTEGER"/>
        <result column="teacher_name" property="teacher_name" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, state, date, duration, user_number, user_ids, device_id, device_ids, device_number, 
    type, isLive, isRecord, resolving_power, bandwidth, org_id, create_time, update_time, 
    create_user_id,teacher_name
  </sql>

    <select id="selectById" resultType="org.cs.dp.sonar.domain.ScheduleOneDeviceBean">
        SELECT
        sc.id,
        sc.name,
        sc.state,
        sc.date,
        sc.duration,
        sc.user_number,
        sc.device_id,
        sc.device_number,
        sc.type,
        sc.isLive,
        sc.isRecord,
        sc.resolving_power,
        sc.bandwidth,
        sc.org_id,
        sc.create_time,
        sc.update_time,
        sc.create_user_id,
        sc.teacher_name,
        sc.user_id,
        ( SELECT group_concat(device_id SEPARATOR ",") FROM schedule_device sd WHERE sd.schedule_id = sc.id and sd.type=0 and sd.state=1) AS device_ids,
        ( SELECT group_concat(device_id SEPARATOR ",") FROM schedule_device sd WHERE sd.schedule_id = sc.id and sd.type=1 and sd.state=1) AS user_ids,
        ( SELECT group_concat(d.`name` SEPARATOR ",") FROM device d WHERE d.device_id IN (SELECT device_id  FROM schedule_device sd WHERE sd.schedule_id = sc.id and sd.type=0 and sd.state=1) ) AS device_names,
        ( SELECT group_concat(u.user_name SEPARATOR ",") FROM user u WHERE u.user_id IN (SELECT device_id  FROM schedule_device sd WHERE sd.schedule_id = sc.id and sd.type=1 and sd.state=1)  ) AS user_names,
        ( SELECT d.name FROM device d WHERE d.device_id = sc.device_id ) AS deviceName,
        ( SELECT u.user_name FROM user u WHERE u.user_id = sc.user_id  ) AS userName
        FROM `schedule` sc where sc.id = #{id}
    </select>

    <select id="getStartInfoById" resultType="org.cs.dp.sonar.domain.ScheduleOneDeviceBean">
    SELECT
        sc.id,
        sc.name,
        sc.state,
        sc.date,
        sc.duration,
        sc.user_number,
		(SELECT d.ysx_id FROM device d WHERE d.device_id =sc.device_id) as device_id,
        sc.device_number,
        sc.type,
        sc.isLive,
        sc.isRecord,
        sc.resolving_power,
        sc.bandwidth,
        sc.org_id,
        sc.create_time,
        sc.update_time,
        sc.create_user_id,
        sc.teacher_name,
		(SELECT u.ysx_id FROM user u WHERE u.user_id =sc.user_id) as user_id,
        ( SELECT group_concat(d.ysx_id SEPARATOR ",") FROM schedule_device sd,device d WHERE sd.device_id=d.device_id and sd.schedule_id = sc.id and sd.type=0 and sd.state=1) AS device_ids,
        ( SELECT group_concat(u.ysx_id SEPARATOR ",") FROM schedule_device sd,user u WHERE sd.device_id =u.user_id and sd.schedule_id = sc.id and sd.type=1 and sd.state=1) AS user_ids
        FROM `schedule` sc where sc.id = #{id}
    </select>

    <select id="selectByCondition" parameterType="org.cs.dp.sonar.domain.GetScheduleBean"
            resultType="org.cs.dp.sonar.domain.ScheduleArrayBean">
        SELECT
        sc.id,
        sc.name,
        sc.state,
        sc.date,
        sc.duration,
        sc.user_number,
        sc.device_id,
        sc.device_number,
        sc.type,
        sc.isLive,
        sc.isRecord,
        sc.resolving_power,
        sc.bandwidth,
        sc.org_id,
        sc.create_time,
        sc.update_time,
        sc.create_user_id,
        sc.teacher_name,
        sc.user_id,
        ( SELECT group_concat(device_id SEPARATOR ",") FROM schedule_device sd WHERE sd.schedule_id = sc.id and
        sd.type=0 and sd.state=1) AS device_ids,
        ( SELECT group_concat(device_id SEPARATOR ",") FROM schedule_device sd WHERE sd.schedule_id = sc.id and
        sd.type=1 and sd.state=1) AS user_ids,
        ( SELECT group_concat(d.`name` SEPARATOR ",") FROM device d WHERE d.device_id IN (SELECT device_id FROM
        schedule_device sd WHERE sd.schedule_id = sc.id and sd.type=0 and sd.state=1) ) AS device_names,
        ( SELECT group_concat(u.user_name SEPARATOR ",") FROM user u WHERE u.user_id IN (SELECT device_id FROM
        schedule_device sd WHERE sd.schedule_id = sc.id and sd.type=1 and sd.state=1) ) AS user_names,
        ( SELECT d.name FROM device d WHERE d.device_id = sc.device_id ) AS deviceName,
        ( SELECT u.user_name FROM user u WHERE u.user_id = sc.user_id ) AS userName
        FROM `schedule` sc WHERE (org_id in(
        SELECT org_id FROM ( SELECT t1.org_id,
        IF ( find_in_set(org_preid, @pids) > 0, @pids := concat(@pids, ',', org_id), 0 ) AS ischild
        FROM ( SELECT org_id, org_preid FROM organization t WHERE t.customer_id =#{param.customer_id}
        ORDER BY org_id, org_preid ) t1, (SELECT @pids := #{param.org_id}) t2 ) t3
        WHERE ischild != 0) or org_id = #{param.org_id})
        <if test="param.id != null and param.id !=''">
            and id = #{param.id,jdbcType=INTEGER}
        </if>
        <if test="param.type != null and param.type !=''">
            and type = #{param.type,jdbcType=INTEGER}
        </if>
        <if test="param.name != null and param.name !=''">
            and (id IN (select schedule_id from schedule_device where device_id in(
            select u.user_id as id FROM user u where u.user_name like CONCAT('%',#{param.name},'%')
            union ALL
            select d.device_id as id FROM device d where d.name like CONCAT('%',#{param.name},'%')
            )) or name like concat('%',#{param.name},'%'))
        </if>
        <if test="param.date != null and param.date !=''">
            and date like CONCAT(#{param.date},'%')
        </if>
        order by create_time
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insertSelective" parameterType="org.cs.dp.sonar.domain.ScheduleArrayBean" useGeneratedKeys="true"
            keyProperty="id">
        insert into schedule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="duration != null">
                duration,
            </if>
            <if test="user_number != null">
                user_number,
            </if>
            <if test="user_ids != null">
                user_ids,
            </if>
            <if test="device_id != null">
                device_id,
            </if>
            <if test="device_ids != null">
                device_ids,
            </if>
            <if test="device_number != null">
                device_number,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="isLive != null">
                isLive,
            </if>
            <if test="isRecord != null">
                isRecord,
            </if>
            <if test="resolving_power != null">
                resolving_power,
            </if>
            <if test="bandwidth != null">
                bandwidth,
            </if>
            <if test="org_id != null">
                org_id,
            </if>
            <if test="create_time != null">
                create_time,
            </if>
            <if test="update_time != null">
                update_time,
            </if>
            <if test="create_user_id != null">
                create_user_id,
            </if>
            <if test="teacher_name != null">
                teacher_name,
            </if>
            <if test="user_id != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="date != null">
                #{date,jdbcType=VARCHAR},
            </if>
            <if test="duration != null">
                #{duration,jdbcType=VARCHAR},
            </if>
            <if test="user_number != null">
                #{user_number,jdbcType=INTEGER},
            </if>
            <if test="user_ids != null">
                #{user_ids,jdbcType=VARCHAR},
            </if>
            <if test="device_id != null">
                #{device_id,jdbcType=INTEGER},
            </if>
            <if test="device_ids != null">
                #{device_ids,jdbcType=VARCHAR},
            </if>
            <if test="device_number != null">
                #{device_number,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="isLive != null">
                #{isLive,jdbcType=CHAR},
            </if>
            <if test="isRecord != null">
                #{isRecord,jdbcType=CHAR},
            </if>
            <if test="resolving_power != null">
                #{resolving_power,jdbcType=VARCHAR},
            </if>
            <if test="bandwidth != null">
                #{bandwidth,jdbcType=VARCHAR},
            </if>
            <if test="org_id != null">
                #{org_id,jdbcType=INTEGER},
            </if>
            <if test="create_time != null">
                #{create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="update_time != null">
                #{update_time,jdbcType=TIMESTAMP},
            </if>
            <if test="create_user_id != null">
                #{create_user_id,jdbcType=INTEGER},
            </if>
            <if test="teacher_name != null">
                #{teacher_name,jdbcType=VARCHAR},
            </if>
            <if test="user_id != null">
                #{user_id,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.cs.dp.sonar.domain.entity.ScheduleEntity">
        update schedule
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="date != null">
                date = #{date,jdbcType=VARCHAR},
            </if>
            <if test="duration != null">
                duration = #{duration,jdbcType=VARCHAR},
            </if>
            <if test="user_number != null">
                user_number = #{user_number,jdbcType=INTEGER},
            </if>
            <if test="user_ids != null">
                user_ids = #{user_ids,jdbcType=VARCHAR},
            </if>
            <if test="device_id != null">
                device_id = #{device_id,jdbcType=INTEGER},
            </if>
            <if test="device_ids != null">
                device_ids = #{device_ids,jdbcType=VARCHAR},
            </if>
            <if test="device_number != null">
                device_number = #{device_number,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="isLive != null">
                isLive = #{isLive,jdbcType=CHAR},
            </if>
            <if test="isRecord != null">
                isRecord = #{isRecord,jdbcType=CHAR},
            </if>
            <if test="resolving_power != null">
                resolving_power = #{resolving_power,jdbcType=VARCHAR},
            </if>
            <if test="bandwidth != null">
                bandwidth = #{bandwidth,jdbcType=VARCHAR},
            </if>
            <if test="org_id != null">
                org_id = #{org_id,jdbcType=INTEGER},
            </if>
            <if test="create_time != null">
                create_time = #{create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="update_time != null">
                update_time = #{update_time,jdbcType=TIMESTAMP},
            </if>
            <if test="create_user_id != null">
                create_user_id = #{create_user_id,jdbcType=INTEGER},
            </if>
            <if test="teacher_name != null">
                teacher_name = #{teacher_name,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>
