<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cs.dp.sonar.mapper.MeetingUserMapper">
    <resultMap id="BaseResultMap" type="org.cs.dp.sonar.domain.entity.MeetingUserEntity">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="meeting_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, meeting_id, user_id
  </sql>

    <select id="deleteByMeetingId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from meeting_user
        where meeting_id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from meeting_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insertBatch" parameterType="java.util.List">
        insert into meeting_user ( meeting_id, user_id) VALUES
        <foreach collection="meetingUsers" item="user" separator=",">
            (#{user.meeting_id,jdbcType=INTEGER}, #{user.user_id,jdbcType=INTEGER})
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="org.cs.dp.sonar.domain.entity.MeetingUserEntity">
    update meeting_user
    set meeting_id = #{meeting_id,jdbcType=INTEGER},
      user_id = #{user_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
