server:
  port: 9005 #提供者的端口
spring:
  application:
    name: dolphin-ucenter
  cloud:
    nacos:
      config:
        server-addr: ${nacos.server.ip}
        prefix: dolphin-config
      discovery:
        server-addr: ${nacos.server.ip}
    sentinel:
      transport:
        dashboard: ${sentinel.server.ip}
  zipkin:
    base-url: ${zipkin.server.ip}
    locator:
      discovery:
        enabled: true
  datasource:
    url: ${jdbc.url}
    username: ${jdbc.username}
    password: ${jdbc.password}
    driver-class-name: ${jdbc.driverClass}
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20

  redis:
    database: ${redis.database}
    # Redis服务器地址
    host: ${redis.host}
    # Redis服务器连接端口
    port: ${redis.port}
    # Redis服务器连接密码（默认为空）
    password: ${redis.password}
    # 连接池最大连接数（使用负值表示没有限制）
    jedis.pool.max-active: ${jedis.pool.max-active}
    # 连接池最大阻塞等待时间（使用负值表示没有限制）
    jedis.pool.max-wait: ${jedis.pool.max-wait}
    # 连接池中的最大空闲连接
    jedis.pool.max-idle: ${jedis.pool.max-idle}
    # 连接池中的最小空闲连接
    jedis.pool.min-idle: ${jedis.pool.min-idle}
    # 连接超时时间（毫秒）
    timeout: ${redis.timeout}

management:
  endpoints:
    web:
      exposure:
        include: '*'
mybatis:
  type-aliases-package: org.cs.*.entity
  mapper-locations: classpath*:**/mapper/*Mapper.xml
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
logging:
  level:
    org:
      cs: debug